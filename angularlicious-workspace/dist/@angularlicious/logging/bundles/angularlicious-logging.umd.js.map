{"version":3,"file":"angularlicious-logging.umd.js.map","sources":["ng://@angularlicious/logging/src/logging.module.ts","ng://@angularlicious/logging/src/logging.service.ts","ng://@angularlicious/logging/src/logging.service.config.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [CommonModule]\r\n})\r\nexport class AngularliciousLoggingModule {}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { loggingServiceConfig } from './logging.service.config';\r\nimport { Severity } from './severity.enum';\r\n\r\n@Injectable()\r\nexport class AngularliciousLoggingService {\r\n  applicationName = 'Angularlicio.us';\r\n  serviceName = 'LoggingService';\r\n  source: string;\r\n  severity: Severity;\r\n  message: string;\r\n  timestamp: Date;\r\n\r\n  /**\r\n   * The [LoggingService] constructor.\r\n   */\r\n  // constructor(\r\n  //     // @Optional() private config: loggingServiceConfig\r\n  //     applicationName: string\r\n  // ) {\r\n  //     this.log(this.serviceName, Severity.Information, `Starting logging service at: ${this.timestamp}`);\r\n  //     if(applicationName) {\r\n  //         this.applicationName = applicationName;\r\n  //     }\r\n  // }\r\n\r\n  /**\r\n   * Use this method to send a log message with severity and source information\r\n   * to the application's logger.\r\n   *\r\n   * If the application environment mode is [Production], the information will\r\n   * be sent to a centralized repository.\r\n   *\r\n   * @param source\r\n   * @param severity\r\n   * @param message\r\n   */\r\n  log(source: string, severity: Severity, message: string) {\r\n    this.source = `${this.applicationName}.${source}`;\r\n    this.severity = severity;\r\n    this.message = message;\r\n    this.timestamp = new Date();\r\n\r\n    const msg = `${this.message}`;\r\n\r\n    // todo: add switch based on the severity to:\r\n    // console.info\r\n    // console.warn\r\n    // console.error\r\n    // console.log\r\n    console.log(\r\n      `${this.severity} from ${this.source}: ${msg} (${this.timestamp})`\r\n    );\r\n  }\r\n}\r\n","export class loggingServiceConfig {\r\n  public applicationName = 'APP_NAME_NOT_PROVIDED';\r\n}\r\n"],"names":["NgModule","CommonModule","Injectable"],"mappings":";;;;;;;;;;AAAA;;;;oBAGCA,aAAQ,SAAC;wBACR,OAAO,EAAE,CAACC,mBAAY,CAAC;qBACxB;;0CALD;;;;;;;ACAA;;mCAOoB,iBAAiB;+BACrB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8B9B,0CAAG;;;;;;;;;;;;YAAH,UAAI,MAAc,EAAE,QAAkB,EAAE,OAAe;gBACrD,IAAI,CAAC,MAAM,GAAM,IAAI,CAAC,eAAe,SAAI,MAAQ,CAAC;gBAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;gBAE5B,qBAAM,GAAG,GAAG,KAAG,IAAI,CAAC,OAAS,CAAC;;;;;;gBAO9B,OAAO,CAAC,GAAG,CACN,IAAI,CAAC,QAAQ,cAAS,IAAI,CAAC,MAAM,UAAK,GAAG,UAAK,IAAI,CAAC,SAAS,MAAG,CACnE,CAAC;aACH;;oBAjDFC,eAAU;;2CALX;;;;;;;ACAA,QAAA;;mCAC2B,uBAAuB;;mCADlD;QAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
